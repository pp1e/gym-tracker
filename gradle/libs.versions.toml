[versions]

# Core

android-compileSdk = "35"
android-minSdk = "30"

# Plugins

kotlin="2.1.10"
androidApplication = "8.8.0"
composeMultiplatform = "1.7.3"
ktlint = "12.1.2"
ksp = "2.1.10-1.0.29"

# Libs

activityCompose="1.10.0"
androidLifecycle="2.8.4"
junit = "4.13.2"
androidJunit = "1.2.1"
espressoCore = "3.6.1"
decompose = "2.2.2"
mvikotlin = "3.3.0"
essenty = "1.3.0"
reaktive = "1.3.0"
sqldelight = "2.0.2"
storage = "1.5.0"
kotlinDatetime = "0.6.2"

[plugins]

kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin"}
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
android-application = { id = "com.android.application", version.ref = "androidApplication" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
#ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

[libraries]

# Core

android-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidLifecycle" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidLifecycle" }

# Kotlin Multiplatform Libs

kotlinDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinDatetime" }

# Decompose

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decomposeExtensionsCompose = { module = "com.arkivanov.decompose:extensions-compose", version = "3.3.0" }

# MVIKotlin

mvikotlin = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "mvikotlin" }
mvikotlinMain = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "mvikotlin" }
mvikotlinLogging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "mvikotlin" }
mvikotlinTimetravel = { module = "com.arkivanov.mvikotlin:mvikotlin-timetravel", version.ref = "mvikotlin" }
mvikotlinExtensionsReaktive = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-reaktive", version.ref = "mvikotlin" }
mvikotlinExtensionsRx = { module = "com.arkivanov.mvikotlin:rx", version.ref = "mvikotlin" }

# Essenty

essentyLifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }

# Reactive

reaktive = { module = "com.badoo.reaktive:reaktive", version.ref = "reaktive" }
reaktiveCoroutinesInterop = { module = "com.badoo.reaktive:coroutines-interop", version.ref = "reaktive" }
reaktiveTesting = { module = "com.badoo.reaktive:reaktive-testing", version.ref = "reaktive" }

# SQLDelight

sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }

# Java test

junit = { module = "junit:junit", version.ref = "junit" }

# Android test

androidJunit = { module = "androidx.test.ext:junit", version.ref = "androidJunit" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
#composeJunitUiTest  = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }

# Debug

#composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
#composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
storage = { group = "androidx.test.services", name = "storage", version.ref = "storage" }

[bundles]

kotlinMultiplatformLibs = [
    "kotlinDatetime",
]

decompose = [
    "decompose",
    "decomposeExtensionsCompose",
]

mvikotlin = [
    "mvikotlin",
    "mvikotlinMain",
    "mvikotlinLogging",
    "mvikotlinTimetravel",
    "mvikotlinExtensionsReaktive",
    "mvikotlinExtensionsRx",
]

reactive = [
    "reaktive",
    "reaktiveCoroutinesInterop",
    "reaktiveTesting",
]
